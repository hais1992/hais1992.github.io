<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hais丶</title>
    <link>https://hais.pw/posts/</link>
    <description>Recent content in Posts on Hais丶</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Jan 2019 11:00:37 +0800</lastBuildDate>
    
	<atom:link href="https://hais.pw/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Windows Server数据中心版(无UI) 安装Honolulu管理中心</title>
      <link>https://hais.pw/2019/windowsinstallhonolulu/</link>
      <pubDate>Thu, 17 Jan 2019 11:00:37 +0800</pubDate>
      
      <guid>https://hais.pw/2019/windowsinstallhonolulu/</guid>
      <description>前提说明、准备工作。  服务器 指的是 被控制端 使用端 指的是 使用的机子(一般是自己电脑) Honolulu 可安装在服务器中，也可安装在使用端中 准备一台 Windows Server数据中心版(无UI) 的服务器，并开通3389远程链接 如是 腾讯云、阿里云 等云服务器，请在web面板上放行 入方向的5985、5986 端口  服务器(被控制端)配置 1、打开远程后，在cmd窗口输入以下命令
#运行 PowerShell PowerShell #打开 PowerShell 的远程链接权限 Enable-PSRemoting -Force Set-NetFirewallRule -Name &amp;quot;WINRM-HTTP-In-TCP-PUBLIC&amp;quot; -RemoteAddress Any  安装 Honolulu (Windows Admin Center) 可安装在 服务器 中，也可安装在 使用端 中，请根据需求选择 软件下载页面为：Honolulu 下载页面 软件下载地址为：Honolulu 下载地址 以下命令，不管安装在那个端都通用(要在PowerShell中运行)
#授权信任IP Set-Item WSMan:localhost\client\trustedhosts -value * -Force #下载软件 wget -Uri https://download.microsoft.com/download/1/0/5/1059800B-F375-451C-B37E-758FFC7C8C8B/WindowsAdminCenter1809.5.msi -UseBasicParsing -OutFile c:\Honolulu.msi #打开软件安装，安装的时候注意自己填写的端口，以后打开管理界面也是这端口 ./Honolulu.msi  到现在可以用 IP+端口 的形式直接打开网页进行访问管理了.</description>
    </item>
    
    <item>
      <title>Linux 中一键搭建SSR(单用户自用，其实是ss)</title>
      <link>https://hais.pw/2019/debianinstallssr/</link>
      <pubDate>Thu, 17 Jan 2019 10:20:37 +0800</pubDate>
      
      <guid>https://hais.pw/2019/debianinstallssr/</guid>
      <description>准备工作  准备一台 Linux 的服务器，并使用SSH链接 如是云服务器，请在web面板上放行对应端口  准备工作 #Centos执行这个 yum -y install git #Ubuntu、Debian执行这个 apt-get update &amp;amp;&amp;amp; apt-get -y install git  克隆代码并进行安装 #下载代码 git clone https://github.com/flyzy2005/ss-fly #开始一键安装,hais1992为密码,40380为连接端口 ss-fly/ss-fly.sh -i hais1992 40380  安装成功后就可以直接使用了
Ps： 参考网站：https://github.com/flyzy2005/ss-fly 启动：/etc/init.d/ss-fly start 停止：/etc/init.d/ss-fly stop 重启：/etc/init.d/ss-fly restart 状态：/etc/init.d/ss-fly status 查看ss链接：ss-fly/ss-fly.sh -sslink 修改配置文件：nano /etc/shadowsocks.json 卸载ss服务 ss-fly/ss-fly.sh -uninstall</description>
    </item>
    
    <item>
      <title>Debian开机自动执行文件</title>
      <link>https://hais.pw/2019/debianstartdosh/</link>
      <pubDate>Mon, 14 Jan 2019 11:20:37 +0800</pubDate>
      
      <guid>https://hais.pw/2019/debianstartdosh/</guid>
      <description>创建启动sh脚本文件,输入以下内容
sleep 20 #延时执行 #下面是要执行的信息 sh /mnt/harddisk/stopMysql.sh &amp;amp;&amp;amp; sh /mnt/harddisk/startAria2.sh  把启动脚本增加到启动文件
nano /etc/rc.local #在 exit 0 前面增加以下一行 nohup /root/openMachineStart.sh &amp;amp;  </description>
    </item>
    
    <item>
      <title>Lighttpd配置Https</title>
      <link>https://hais.pw/2019/lighttpdhttps/</link>
      <pubDate>Mon, 14 Jan 2019 11:20:37 +0800</pubDate>
      
      <guid>https://hais.pw/2019/lighttpdhttps/</guid>
      <description>1、安装Lighttpd过程省略
2、编辑 /etc/lighttpd/lighttpd.conf 如下
server.modules = ( &amp;quot;mod_access&amp;quot;, &amp;quot;mod_alias&amp;quot;, &amp;quot;mod_compress&amp;quot;, &amp;quot;mod_redirect&amp;quot;, ) server.document-root = &amp;quot;/mnt/harddisk/www&amp;quot; server.upload-dirs = ( &amp;quot;/var/cache/lighttpd/uploads&amp;quot; ) server.errorlog = &amp;quot;/var/log/lighttpd/error.log&amp;quot; server.pid-file = &amp;quot;/var/run/lighttpd.pid&amp;quot; server.username = &amp;quot;www-data&amp;quot; server.groupname = &amp;quot;www-data&amp;quot; server.port = 80 server.max-worker = 4 index-file.names = (&amp;quot;/_h5ai/public/index.php&amp;quot;, &amp;quot;index.php&amp;quot;, &amp;quot;index.html&amp;quot;, &amp;quot;index.lighttpd.html&amp;quot; ) url.access-deny = ( &amp;quot;~&amp;quot;, &amp;quot;.inc&amp;quot; ) static-file.exclude-extensions = ( &amp;quot;.php&amp;quot;, &amp;quot;.pl&amp;quot;, &amp;quot;.fcgi&amp;quot; ) compress.cache-dir = &amp;quot;/var/cache/lighttpd/compress/&amp;quot; compress.filetype = ( &amp;quot;application/javascript&amp;quot;, &amp;quot;text/css&amp;quot;, &amp;quot;text/html&amp;quot;, &amp;quot;text/plain&amp;quot; ) # default listening port for IPv6 falls back to the IPv4 port include_shell &amp;quot;/usr/share/lighttpd/use-ipv6.</description>
    </item>
    
    <item>
      <title>Debian开机自动挂载U盘</title>
      <link>https://hais.pw/2019/debianstartautomount/</link>
      <pubDate>Mon, 14 Jan 2019 10:50:37 +0800</pubDate>
      
      <guid>https://hais.pw/2019/debianstartautomount/</guid>
      <description>查看U盘(移动硬盘)的分区UUID
#查看所有 ls -l /dev/disk/by-uuid/ #查看指定 blkid /dev/sda1  根据UUID增加挂载分区,挂载到 /mnt/harddisk 文件夹
#编辑启动文件 nano /etc/fstab #在最后增加以下行数 UUID=A8987C2D987BF7E0 /mnt/harddisk auto defaults,noatime,rw,nofail,x-systemd.automount 0 0  </description>
    </item>
    
    <item>
      <title>Hugo发布一篇新文章</title>
      <link>https://hais.pw/2019/hugopostarticle/</link>
      <pubDate>Mon, 14 Jan 2019 10:26:34 +0800</pubDate>
      
      <guid>https://hais.pw/2019/hugopostarticle/</guid>
      <description>本地调试
hugo server --buildDrafts  生成网站
hugo --theme=LeaveIt --baseUrl=&amp;quot;https://hais.pw/&amp;quot;  部署、上传
git add -A git commit -m &amp;quot;修改说明&amp;quot; git push  </description>
    </item>
    
    <item>
      <title>给 ArchLinux 增加sudo命令</title>
      <link>https://hais.pw/2017/archlinuxaddsudo/</link>
      <pubDate>Thu, 21 Sep 2017 10:03:38 +0000</pubDate>
      
      <guid>https://hais.pw/2017/archlinuxaddsudo/</guid>
      <description>习惯了 sudo apt-get update ， 然后 某天，发现没有了 sudo 感觉有点不爽快了。
安装Sudo
pacman -S sudo  安装完后我们新建个用户，并给他加入sudo的权限
useradd hais #添加一个hais用户,如果是ubuntu命令为 adduser passwd hais #给hais用户设置密码 mkdir /home/hais #给hais用户创建一个文件夹 chown hais:hais /home/hais #给hais设置home文件  创建好了之后，开始配置sudo
chmod u+w /etc/sudoers #修改文件给可写 vim /etc/sudoers #修改文件 在 &#39;root ALL=(ALL) ALL&#39; 后增加一行 “hais ALL=(ALL) ALL” chmod u-w /etc/sudoers #恢复文件权限  然后就OK了， 可以愉快的使用 sudo 了</description>
    </item>
    
    <item>
      <title>VBox安装ArchLinux</title>
      <link>https://hais.pw/2017/installarchlinux/</link>
      <pubDate>Sun, 17 Sep 2017 16:26:32 +0000</pubDate>
      
      <guid>https://hais.pw/2017/installarchlinux/</guid>
      <description>准备软件 下载Arch：https://www.archlinux.org/download/ 下载Vbox：https://www.virtualbox.org/wiki/Downloads  参考： http://blog.csdn.net/qq_25187981/article/details/75209051 http://bbs.archlinuxcn.org/viewtopic.php?id=1037 https://wiki.archlinux.org/index.php/Installation_guide https://wiki.archlinux.org/index.php/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)  安装步骤 ping www.baidu.com	#检查网络 timedatectl set-ntp true	#更新时间 fdisk -l	#查看磁盘名称 fdisk /dev/sda	#磁盘分区 #新建第一个分区，大小为1G，作为交换分区 # n	-&amp;gt;新建 # p -&amp;gt;选择分区类型为主分区 # l -&amp;gt;选择分区扇区号 # 2048 -&amp;gt;设置分区开始的值 # 2099200 -&amp;gt;设置分区结束的值 # # 创建第二个分区，剩下的空间 # n	-&amp;gt;新建 # p -&amp;gt;选择分区类型 # 2 -&amp;gt;选择分区扇区号 # 回车 -&amp;gt;设置分区开始的值 # 回车 -&amp;gt;设置分区结束的值 # # 写入分区信息 # w mkswap /dev/sda1	#格式化交换分区 swapon /dev/sda1	#挂载交换分区 mkfs.</description>
    </item>
    
    <item>
      <title>使用ArchLinux编译LineageOS</title>
      <link>https://hais.pw/2017/archbuildlineageos/</link>
      <pubDate>Sun, 17 Sep 2017 10:03:38 +0000</pubDate>
      
      <guid>https://hais.pw/2017/archbuildlineageos/</guid>
      <description>准备工作   电脑磁盘空余150G以上 电脑运存大于4G 安装系统时 swap 推荐设置10G 推荐设置 /tmp 空间为10G 系统默认使用 Python2   1、分区调整(如安装系统时已设置swap比较大的可不设置) dd if=/dev/zero of=/swapfile.img bs=1M count=10240 chmod 600 /swapfile.img mkswap /swapfile.img swapon /swapfile.img #编辑 /etc/fstab 在最后加入一行 /swapfile.img	swap	swap	defaults	0	0 tmpfs	/tmp	tmpfs	defaults,size=10G	0	0 #调整完成后可使用 free -h 查看  2、准备工作 # 编辑文件/etc/pacman.conf，最后面添加lib32和AUR支持 [multilib] Include = /etc/pacman.d/mirrorlist [archlinuxcn] SigLevel = Optional TrustAll Server = http://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch # 编辑文件/etc/pacman.d/mirrorlist Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch Server = http://mirrors.</description>
    </item>
    
    <item>
      <title>新电脑发布文章的方法</title>
      <link>https://hais.pw/2017/machinehexopostarticle/</link>
      <pubDate>Fri, 15 Sep 2017 10:52:38 +0000</pubDate>
      
      <guid>https://hais.pw/2017/machinehexopostarticle/</guid>
      <description>1、安装 Node.js 和 Git
下载地址：http://nodejs.org/ 下载地址：http://git-scm.com/  2、安装Hexo
npm install -g hexo-cli  3、用git拉下hexo分支代码
$ git clone -b hexo git@github.com:hais1992/hais1992.github.io.git  4、安装环境
$ cd hais1992.github.io.git $ npm install hexo $ hexo init $ npm install $ npm install hexo-deployer-git  5、然后就可以编辑文章发布了
$ hexo generate -d  6、发布完成后就可以继续提交代码备份了
$ git add * $ git commit -m 提交代码 $ git push  参考地址： https://hexo.io/zh-cn/docs/setup.html http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more https://github.com/Ben02/hexo-theme-Anatole/wiki/Installation</description>
    </item>
    
    <item>
      <title>使用Ubuntu16.04编译SudaMod</title>
      <link>https://hais.pw/2017/ubuntubuildsudamod/</link>
      <pubDate>Fri, 28 Jul 2017 10:03:38 +0000</pubDate>
      
      <guid>https://hais.pw/2017/ubuntubuildsudamod/</guid>
      <description>注：文章参考 https://github.com/wzv5/android_device_zuk_z2_plus/wiki/ 进行修改整理。 准备工作   电脑磁盘空余150G以上 电脑运存大于4G 推荐使用Ubuntu16.04 安装系统时 swap 推荐设置10G 推荐设置 /tmp 空间为10G 系统默认使用 Python2   1、分区调整(如安装系统时已设置swap比较大的可不设置) sudo dd if=/dev/zero of=/swapfile.img bs=1M count=10240 sudo chmod 600 /swapfile.img sudo mkswap /swapfile.img sudo swapon /swapfile.img #编辑 /etc/fstab 在最后加入一行 /swapfile.img	swap	swap	defaults	0	0 tmpfs	/tmp	tmpfs	defaults,size=10G	0	0 #调整完成后可使用 free -h 查看  2、安装编译工具 sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install git-core gnupg flex bison gperf libsdl1.</description>
    </item>
    
    <item>
      <title>Hexo发布一篇新文章</title>
      <link>https://hais.pw/2017/hexopostarticle/</link>
      <pubDate>Fri, 28 Jul 2017 09:58:44 +0000</pubDate>
      
      <guid>https://hais.pw/2017/hexopostarticle/</guid>
      <description>发布新文章
hexo new [layout] &amp;lt;title&amp;gt;  生成文件
hexo generate  调试、查看
hexo server  部署、上传
hexo deploy  </description>
    </item>
    
    <item>
      <title>linux 控制台 连接 vpn (PPTPD)</title>
      <link>https://hais.pw/2015/vpnpptpd/</link>
      <pubDate>Sun, 10 May 2015 12:52:38 +0000</pubDate>
      
      <guid>https://hais.pw/2015/vpnpptpd/</guid>
      <description>其实在ubuntu里面很简单。
1、安装 pptpd
$ sudo apt-get install pptp-linux  2、就可以直接拨号连接了（下面中文改为相应的参数）
sudo pptpsetup --create 名称 --server 地址 --username 账号 --password 密码 --encrypt --start  –create后的是创建的连接名称，可以为任意名称; –server后接的是vpn服务器的IP; –username是用户名 –password是密码，在这也可以没这个参数，命令稍后会自动询问。这样可以保证账号安全 –encrypt 是表示需要加密，不必指定加密方式，命令会读取配置文件中的加密方式 –start是表示创建连接完后马上连接，如果你不想连，就不写
如果创建好了连接–start选项或者是下次再想连接时，输入命令 “sudo pon 名称” 就可以了，然后 “sudo poff”命令可以 断开当前连接。</description>
    </item>
    
    <item>
      <title>给Linux 增加sudo命令</title>
      <link>https://hais.pw/2015/linuxsudo/</link>
      <pubDate>Sun, 01 Feb 2015 23:52:38 +0000</pubDate>
      
      <guid>https://hais.pw/2015/linuxsudo/</guid>
      <description>习惯了 sudo apt-get update ， 然后 某天，发现没有了 sudo 感觉有点不爽快了。
然后第一感觉就是使用 root 用户安装 sudo 包
$ apt-get install sudo  安装完后我们新建个用户&amp;rdquo;hais&amp;rdquo;，并给他加入sudo的权限
$ adduser hais #添加一个hais用户 $ passwd hais #给hais用户设置密码 $ mkdir /home/hais #给hais用户创建一个文件夹 $ chown hais:hais /home/hais #给hais设置home文件  创建好了之后，开始配置sudo
$ chmod u+w /etc/sudoers #修改文件给可写 $ nano /etc/sudoers #修改文件 在 &#39;root ALL=(ALL) ALL&#39; 后增加一行 “hais ALL=(ALL) ALL” $ chmod u-w /etc/sudoers #恢复文件权限  然后就OK了， 可以愉快的使用 sudo 了</description>
    </item>
    
  </channel>
</rss>